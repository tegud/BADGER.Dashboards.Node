input {
        udp {
                port => 112
                codec => "oldlogstashjson"
        }
}
filter {
        if [type] =~ "ms_" and [hostName] =~ "teltlrgmsqa" {
                drop { }
        }

        if [type] == "lr_varnish_request" or [type] == "lr_errors" or [type] == "xml_varnish" {

                if [url] =~ /\/beacon\/pageresponse/ and [req_headers][Referer] =~ /.+/ {
                        kv {
                                prefix => "url_querystring_"
                                source => "url_querystring_t_other"
                                field_split => "&"
				value_split => "|"
                        }

                        mutate {
                                rename => [
                                        "[req_headers][Referer]", "calling_url",
                                        "[url]", "beacon_url",
                                        "url_querystring_t_resp", "timing_response",
                                        "url_querystring_t_page", "timing_page",
                                        "url_querystring_t_done", "timing_done",
                                        "url_querystring_nt_con", "navigationTiming_con",
                                        "url_querystring_nt_con_st", "navigationTiming_con_start",
                                        "url_querystring_nt_con_end", "navigationTiming_con_end",
                                        "url_querystring_nt_nav_type", "navigationTiming_nav_type",
                                        "url_querystring_nt_nav_st", "navigationTiming_nav_start",
                                        "url_querystring_nt_red_st", "navigationTiming_red_start",
                                        "url_querystring_nt_red_end", "navigationTiming_red_end",
                                        "url_querystring_nt_dns", "navigationTiming_dns",
                                        "url_querystring_nt_dns_st", "navigationTiming_dns_start",
                                        "url_querystring_nt_dns_end", "navigationTiming_dns_end",
                                        "url_querystring_t_domloaded", "timing_domLoaded"
                                ]

                                convert => [
                                        "timing_response", "integer",
                                        "timing_page", "integer",
                                        "timing_done", "integer",
                                        "navigationTiming_con", "integer",
                                        "navigationTiming_con_start", "integer",
                                        "navigationTiming_con_end", "integer",
                                        "navigationTiming_nav_type", "integer",
                                        "navigationTiming_nav_start", "integer",
                                        "navigationTiming_red_start", "integer",
                                        "navigationTiming_red_end", "integer",
                                        "navigationTiming_dns", "integer",
                                        "navigationTiming_dns_start", "integer",
                                        "navigationTiming_dns_end", "integer",
                                        "timing_domLoaded", "integer"
                                ]

                                add_tag => "beacon"
                        }
		

                        grok { match => [ "calling_url", "%{URIPROTO:url_protocol}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST:url_host})?(?:%{URIPATHPARAM:url})?" ] }


                }

                grok { match => [ "url", "%{URIPATH:url_path}%{URIPARAM:url_querystring}?(?:#(?<url_hash>).*)?" ] }

                if [url_path] =~ /[.]([^.])+$/ {
                        grok { match => [ "url_path", "\.(?<url_extension>[^.]+)$" ] }

                        if [url_extension] =~ /^(gif|png|jpg|ico|jpeg)$/ {
                                mutate { add_tag => "image" }
                                drop { }
                        }
                        else if [url_extension] =~ /^(js|css|htm(l)?|xml|txt|htc)$/ {
                                mutate { add_tag => "asset" }
                                drop { }
                        }
                        else {
                                mutate { add_tag => "content" }
                        }

                } else if [url_path] =~ /^\/status$/ {
                        mutate { add_tag => "health-check" }
                        drop { }
                } else if [url_path] =~ /^\/beacon\// {
                        mutate { add_tag => "beacon" }
                } else {
                        mutate { add_tag => "content" }
                }

                useragent {
                        source => "[req_headers][User_Agent]"
                        prefix => "UA_"
                }

                if [req_headers][User_Agent] =~ /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|nagios|postrank|pingdom|slurp|spider|yahoo!/ {
                        mutate {
                                add_field => { "UA_is_bot" => true } 
                        }
                }
                else {
                        mutate {
                                add_field => { "UA_is_bot" => false } 
                        }
                }

                mutate { remove_field => [ "time", "message" ] }

                if [type] == "xml_varnish" {
                        mutate {
                                rename => [ 
                                        "[req_headers][X_Cluster_Client_Ip]", "ip",
                                        "[req_headers][Host]", "host"
                                ]
                        }
                        mutate {
                                convert => [ "[resp_headers][Age]", "integer" ]
                        }

                        urldecode { field => "url_querystring_hids" }
                }
        }

        if [type] == "lr_varnish_request" {
                mutate {
                        rename => [ 
                                "[vcl_log][X_LOG_RequestId]", "requestId",
                                "[vcl_log][X_LOG_SessionId]", "sessionId"
                        ]
                }

                if [req_headers][X_BB_Flags] =~ "[0-9]+" {
                        mutate {
                                convert => [ 
                                        "[req_headers][X_BB_Flags]", "integer",
                                        "[req_headers][X_BB_Score]", "integer" 
                                ]
                                rename => [
                                        "[req_headers][X_BB_Flags]", "botBuster_flags",
                                        "[req_headers][X_BB_Score]", "botBuster_score",
                                        "[req_headers][X_BB_Limited]", "botBuster_limited",
                                        "[req_headers][X_BB_Flag_Tokens]", "botBuster_flag_tokens"
                                ]
                                add_field => { "botBuster_tracked" => true }
                        }
                }
                else {
                        mutate {
                                add_field => { 
                                        "botBuster_flags" => 0 
                                        "botBuster_score" => 0 
                                        "botBuster_limited" => false
					"botBuster_flag_tokens" => ""
					"botBuster_tracked" => false 
                                }
                        }
                }
        }

        if [type] == "lr_varnish_request" or [type] == "lr_errors" {
                grok { match => [ "url_path", "^(?:\/(?<url_language>en|de|es|it|fr))?(?:\/p(?<url_partner>[0-9]+))?(?:\/pv(?<url_partner_value>[0-9a-zA-Z]+))?(?<url_page>.*)$" ] }

                if [req_headers][Cookie] =~ /ASP\.NET_SessionId/ {
                        grok { match => [ "[req_headers][Cookie]", "(?:ASP\.NET_SessionId=(?<aspnet_session>[a-zA-Z0-9]+))" ] }
                }

                translate {
                        regex => true
                        field => "url_page"
                        destination => "url_page_type"
                        fallback => "unknown"
                        dictionary => [
                                "\/((k[0-9]+_[a-zA-Z0-9\-\%'()]*)|(r[0-9]+_hotel[a-zA-Z0-9\-\%'()]*)|((H|h)otels(-p[0-9]+)?)|(AjaxSearch|Mobile(Ajax|Search)))\.aspx$", "search",
                                "^\/SearchHelp\/", "search-misc",
                                "^(\/[a-z]{2})?\/hotel-(reservations|directions|facilities|pictures|videos|reviews|special-offers)\/", "hotel-details",
                                "^\/(RoomInformation\/Facilities/[0-9]+|special-offers)\.mvc$", "hotel-details",
                                "^\/Hotel(SpecialOffers\/HotelHasSpecialOffers|Reviews\/Ajax\/[0-9]+)\.mvc$", "hotel-details",
                                "^\/AlternativeHotels\/Index\/", "hotel-details-misc",
                                "^\/au/hotel-special-offers\/", "hotel-details",
                                "^\/StarRatingGuide", "hotel-details-misc",
                                "^\/guidebook\/[0-9]+", "hotel-details-misc",
                                "^\/BannerRedirect\.aspx$", "hotel-details-misc",
                                "^\/(A|a)uto(C|c)omplete\/", "auto-complete",
                                "^\/((home\/index\.mvc)|(Landing\.aspx))?$", "home",
                                "^\/main.aspx$", "home",
                                "^\/LocalisedJs\/BookingForm\.mvc$", "mobile-translations",
                                "^\/Hotel(Reservations|SpecialOffers)Submit\/Submit\/[0-9]+\.mvc", "reservation-submit",
                                "^\/static\/", "static",
                                "^\/JobOpportunities\.aspx", "static",
                                "^\/(SetCookies|AdvertsRedirect|BannerRedirect\/Index)\.(aspx|mvc)$", "component",
                                "^\/((Add)?HotelFeedback(Preview)?)|(Upload(Media(LogIn)?|Video))\/", "hotel-feedback",
                                "\/UserProfile\/", "personalisation",
                                "^\/(ManageBooking)|(MyLateRooms)\.mvc$", "my-booking",
                                "^\/MyBookingsCancel\/", "my-booking",
                                "^\/BannerRedirect\.aspx$", "my-booking",
                                "^\/MyAccount((Bookings)|(Registration))?(\/|\.mvc)", "my-account",
                                "^\/((MyAccountWelcome)|(MyLateRoomsWelcome)|(ForgottenPassword))\.((mvc)|(aspx))", "my-account",
                                "^\/ConfirmRegistration\/", "my-account",
                                "^\/destinations\/", "destinations",
                                "^\/(404\.mvc)|(\/BookingError\/Index\.mvc)$", "error",
                                "^\/WebResource\.axd$", "deals-by-email",
                                "\/Subscribe((\/)|(\.aspx))", "deals-by-email",
                                "^\/(CityGuide\/)|(\/city-guides\.aspx)", "city-guides",
                                "^\/business-hotel-booking-services\.aspx$", "corporate",
                                "^\/((hoteliers)|(bluemoon)|(MobileRedirectToDesktop\/Index\.mvc))", "redirect",
                                "^\/price-promise\.mvc$", "price-promise"
                        ]
                }

                if [url_page_type] == "search" {
                        if [url_page] =~ /k[0-9]+/ {
                                grok {
                                        match => ["url_page", "/(?:k(?<search_id>[0-9]+))"]
                                        add_field => { "search_type" => "keyword" }
                                }
                        } else if [url_page] =~ /r[0-9]+/ {
                                grok {
                                        match => ["url_page", "/(?:r(?<search_id>[0-9]+))"]
                                        add_field => { "search_type" => "region" }
                                }
                        } else if [url_page] =~ /^\/(((H|h)otels)|(MobileSearch))\.aspx$/ {
                                if [url_querystring_k] and [url_querystring_k] != "" {
                                        mutate {
                                                add_field => {
                                                        "search_text" => "%{url_querystring_k}"
                                                        "search_type" => "text"
                                                }
                                        }

                                        mutate { gsub => [ "search_text", "\+", " " ] }
                                } else if [url_querystring_r] and [url_querystring_r] != "" {
                                        mutate {
                                                add_field => {
                                                        "search_type" => "region"
                                                        "search_id" => "%{url_querystring_r}"
                                                }
                                        }
                                }
                        } else if [url_page] =~ /(A|a)jax/ {
                                mutate { add_field => { "search_type" => "ajax" } }
                        }

                }

                if [url_page_type] == "hotel-details" {
                        grok { match => [ "url_page", "/(?<hotel_details_page>[a-zA-Z\-]+)/(?<hotel_details_id>[0-9]+)" ] }
                }
        }

        if [type] =~ /^ar_errors/ {
		if [Exception][Message] =~ /^JavascriptLogger/ {
			mutate { add_field => { "errorType" => "JavaScript" } }
		}
		else {
			mutate { add_field => { "errorType" => "Server" } }
		}

                json {
                        source => "form_data"
                        target => "form"
                        remove_field => ["form_data"]
                }
        }

        if [type] == "lr_errors" {
                mutate {
			rename => [
                        	"[AdditionalLoggingInformation][SessionId]", "sessionId",
                        	"[AdditionalLoggingInformation][RequestId]", "requestId"
                	]
		}
        }

	if [type] == "lr_varnish_request" {
		if [url_querystring_x_powered_by] == "moonstick" or [resp_headers][X_Powered_By] == "Moonstick"  {
			mutate {
                                add_field => {
                                        "is_moonstick" => true
                                }
                        }
		}
		else {
		        mutate {
	                        add_field => {
                                	"is_moonstick" => false
                        	}
                	}
		}
	}

        if [type] =~ /domain_events/ and [hotelId] == 235128 {
                mutate {
                        replace => [ "isTestBooking", true ]
                }
        }

        mutate {
                rename => [ 
			"IpAddress", "ip",
			"[req_headers][True_Client_IP]", "ip"
		]
        }

        geoip {
                database => "vendor/geoip/GeoIPASNum.dat"
                source => "ip"
                target => "organisation"
        }
        geoip {
                source => "ip"
        }
}
output {
        elasticsearch_http {
                host => "10.44.72.46"
      	}
}
